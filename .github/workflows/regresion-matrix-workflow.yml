name: Regression Tests matrix
on:
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment"
        required: false
        type: environment
      team:
        description: "Team"
        required: false
        type: choice
        options:
          - TeamA
          - TeamB

jobs:
  setup-regression:
    name: Setup Regression Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-regression-matrix.outputs.matrix }}
      teams: ${{ steps.set-regression-matrix.outputs.teams }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install PyYAML
        run: pip install PyYAML

      - name: Set regression test matrix
        id: set-regression-matrix
        run: |
          python << 'EOF'
          import yaml
          import json
          import os
          
          # Load configuration
          with open('.github/config/regression.yml', 'r') as f:
              config = yaml.safe_load(f)
          
          # Get inputs
          input_environment = "${{ inputs.environment }}"
          input_team = "${{ inputs.team }}"
          
          # Define all environments
          all_environments = [
              "wc2-live", "wc2-approval", "wc2-tuidemo", 
              "odp-live", "odp-approval", "odp-tui-demo"
          ]
          
          # Determine environments to use
          if input_environment:
              environments = [input_environment]
          else:
              environments = all_environments
          
          # Determine teams to use
          if input_team:
              teams = [input_team]
          else:
              teams = list(config.keys())
          
          # Generate matrix entries
          matrix_entries = []
          
          for team in teams:
              if team not in config:
                  print(f"Warning: Team '{team}' not found in config")
                  continue
          
              team_config = config[team]
          
              # Extract team configuration
              display_name = team_config.get('displayName', team)
              gauge_tags = team_config.get('gaugeTags', '')
          
              # Convert environment variables to string
              env_vars = team_config.get('envVars', {})
              env_vars_string = ','.join([f"{k}={v}" for k, v in env_vars.items()])
          
              # Create matrix entry for each environment
              for environment in environments:
                  matrix_entries.append({
                      "team": team,
                      "environment": environment,
                      "displayName": display_name,
                      "gaugeTags": gauge_tags,
                      "envVars": env_vars_string
                  })
          
          # Create final matrix
          matrix = {"include": matrix_entries}
          matrix_json = json.dumps(matrix, separators=(',', ':'))
          
          # Team matrix
          teams_json = json.dumps(teams)
          
          # Output to GitHub
          with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
              f.write(f"matrix={matrix_json}\n")
              f.write(f"teams={teams_json}\n")
          
          # Print summary
          print(f"Generated matrix for {len(teams)} team(s): {', '.join(teams)}")
          print(f"Generated matrix for {len(environments)} environment(s): {', '.join(environments)}")
          print(f"Total matrix combinations: {len(matrix_entries)}")
          print(f"Generated matrix: {matrix_json}")
          print(f"Generated Teams matrix: {teams_json}")
          
          EOF

  odp-tui-demo:
    name: odp-tui-demo
    needs: setup-regression
    uses: ./.github/workflows/_execute-gauge.yml
    strategy:
      fail-fast: false
      matrix:
        team: ${{ fromJson(needs.setup-regression.outputs.teams) }}
    secrets: inherit
    with:
      displayName: "${{ matrix.team }}"
      environment: "odp-tui-demo"
      gaugeParams: "--parallel -n=8"
      gaugeSpecs: "specs/platform-core/service/"
      gaugeTags: ${{ matrix.gaugeTags }}

  odp-approval:
    name: odp-approval
    needs: setup-regression
    uses: ./.github/workflows/_execute-gauge.yml
    strategy:
      fail-fast: false
      matrix:
        team: ${{ fromJson(needs.setup-regression.outputs.teams) }}
    secrets: inherit
    with:
      displayName: "${{ matrix.team }}"
      environment: "odp-approval"
      gaugeParams: "--parallel -n=8"
      gaugeSpecs: "specs/platform-core/service/"
      gaugeTags: ${{ matrix.gaugeTags }}

  odp-live:
    name: odp-live
    needs: setup-regression
    uses: ./.github/workflows/_execute-gauge.yml
    strategy:
      fail-fast: false
      matrix:
        team: ${{ fromJson(needs.setup-regression.outputs.teams) }}
    secrets: inherit
    with:
      displayName: "${{ matrix.team }}"
      environment: "odp-live"
      gaugeParams: "--parallel -n=8"
      gaugeSpecs: "specs/platform-core/service/"
      gaugeTags: ${{ matrix.gaugeTags }}

  wc2-tuidemo:
    name: wc2-tuidemo
    needs: setup-regression
    uses: ./.github/workflows/_execute-gauge.yml
    strategy:
      fail-fast: false
      matrix:
        team: ${{ fromJson(needs.setup-regression.outputs.teams) }}
    secrets: inherit
    with:
      displayName: "${{ matrix.team }}"
      environment: "wc2-tuidemo"
      gaugeParams: "--parallel -n=8"
      gaugeSpecs: "specs/platform-core/service/"
      gaugeTags: ${{ matrix.gaugeTags }}

  wc2-approval:
    name: wc2-approval
    needs: setup-regression
    uses: ./.github/workflows/_execute-gauge.yml
    strategy:
      fail-fast: false
      matrix:
        team: ${{ fromJson(needs.setup-regression.outputs.teams) }}
    secrets: inherit
    with:
      displayName: "${{ matrix.team }}"
      environment: "wc2-approval"
      gaugeParams: "--parallel -n=8"
      gaugeSpecs: "specs/platform-core/service/"
      gaugeTags: ${{ matrix.gaugeTags }}

  wc2-live:
    name: wc2-live
    needs: setup-regression
    uses: ./.github/workflows/_execute-gauge.yml
    strategy:
      fail-fast: false
      matrix:
        team: ${{ fromJson(needs.setup-regression.outputs.teams) }}
    secrets: inherit
    with:
      displayName: "${{ matrix.team }}"
      environment: "wc2-live"
      gaugeParams: "--parallel -n=8"
      gaugeSpecs: "specs/platform-core/service/"
      gaugeTags: ${{ matrix.gaugeTags }}

